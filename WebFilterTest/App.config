<?xml version="1.0" encoding="utf-8" ?>
<configuration>
	<configSections>
		<section name="log4net" type="log4net.Config.Log4NetConfigurationSectionHandler,log4net" />
	</configSections>
    <startup> 
        <supportedRuntime version="v4.0" sku=".NETFramework,Version=v4.7.2" />
    </startup>
	<appSettings>
		<add key="domain" value="www.xvhi6.com"/>
		<add key="cookiename" value="_safe" />
		<add key="cookievalue" value="vqd37pjm4p5uodq339yzk6b7jdt6oich" />
	</appSettings>
	<log4net>
		<root>
			<level value="ALL" />
			<appender-ref ref="SysAppender" />
		</root>
		<logger name="TestLogger">
			<level value="DEBUG"/>
		</logger>
		<appender name="SysAppender" type="log4net.Appender.RollingFileAppender,log4net" >
			<!--是否追加到文件:日志文件路径,文件夹不存在则新建 -->
			<param name="File" value="Log\" />
			<!--是否追加到文件-->
			<param name="AppendToFile" value="true" />
			<!--记录日志写入文件时，不锁定文本文件，防止多线程时不能写Log,官方说线程非安全-->
			<lockingModel type="log4net.Appender.FileAppender+MinimalLock" />
			<!--使用Unicode编码-->
			<Encoding value="UTF-8" />
			<!--最多产生的日志文件数，超过则只保留最新的n个。设定值value="－1"为不限文件数-->
			<param name="MaxSizeRollBackups" value="-1" />
			<!--是否只写到一个文件中-->
			<param name="StaticLogFileName" value="false" />
			<!--按照何种方式产生多个日志文件(日期[Date],文件大小[Size],混合[Composite])-->
			<param name="RollingStyle" value="Date" />
			<!--按日期产生文件夹和文件名［在日期方式与混合方式下使用］-->
			<!--此处按日期产生文件夹，文件名固定。注意&quot; 的位置-->
			<param name="DatePattern" value="/&quot;Log&quot;yyyy-MM-dd&quot;.log&quot;"  />
			<!--这是按日期产生文件夹，并在文件名前也加上日期-->
			<!--<param name="DatePattern" value="yyyyMMdd/yyyyMMdd&quot;-TimerServer.log&quot;"  />-->
			<!--这是先按日期产生文件夹，再形成下一级固定的文件夹-->
			<!--<param name="DatePattern" value="yyyyMMdd/&quot;TimerServer/TimerServer.log&quot;"  />-->
			<!--每个文件的大小:只在混合方式与文件大小方式下使用。超出大小后在所有文件名后自动增加正整数重新命名，数字最大的最早写入。可用的单位:KB|MB|GB。不要使用小数,否则会一直写入当前日志-->
			<param name="maximumFileSize" value="500KB" />
			<!--计数类型为1，2，3…-->
			<!--<param name="CountDirection" value="1"/>-->
			<!--记录的格式。一般用log4net.Layout.PatternLayout布局-->
			<layout type="log4net.Layout.PatternLayout,log4net">
				<!--<param name="Header" value="[Header] "/>
				<param name="Footer" value="[Footer] "/>-->
				<param name="ConversionPattern" value="%d - %m%n" />
			</layout>
			<!--记录的格式。一般用log4net.Layout.PatternLayout布局-->
			<!--用自定义布局测试失败-->
			<!--此处用继承了log4net.Layout.PatternLayout的自定义布局，TGLog.ExpandLayout2为命名空间。%property{Operator}、%property{Action}是自定义的输出-->
			<!--<layout type="TGLog.ExpandLayout2.ReflectionLayout,TGLog">
        <param name="ConversionPattern" value="记录时间：%date 线程ID:[%thread] 日志级别：%-5level 记录类：%logger     操作者ID：%property{Operator} 操作类型：%property{Action}%n             当前机器名:%property%n当前机器名及登录用户：%username %n               记录位置：%location%n 消息描述：%property{Message}%n                    异常：%exception%n 消息：%message%newline%n%n" />
      </layout>-->
			<!--过滤设置，LevelRangeFilter为使用的过滤器-->
			<filter type="log4net.Filter.LevelRangeFilter">
				<param name="LevelMin" value="DEBUG" />
				<param name="LevelMax" value="WARN" />
			</filter>
		</appender>
		<!--<appender name="ConsoleAppender"  type="log4net.Appender.ConsoleAppender,log4net" >
      <layout type="log4net.Layout.PatternLayout,log4net">
        <param name="ConversionPattern"  value="%d [%t] %-5p %c [%x] - %m%n" />
      </layout>
    </appender>-->
	</log4net>
</configuration>